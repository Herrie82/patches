diff --git a/usr/lib/luna/system/luna-applauncher/app/controllers/global-search-assistant.js b/usr/lib/luna/system/luna-applauncher/app/controllers/global-search-assistant.js
index f9f49d9..12a58a9 100644
--- a/usr/lib/luna/system/luna-applauncher/app/controllers/global-search-assistant.js
+++ b/usr/lib/luna/system/luna-applauncher/app/controllers/global-search-assistant.js
@@ -264,15 +264,17 @@ GlobalsearchmainAssistant = Class.create({
 		}
 		
 		// try to handle the very first key event
-		var s;
+		var s=/^\w+$/;
 		if (Mojo.Char.isPrintableChar(event.keyCode, true) && !event.ctrlKey) {
 			s = String.fromCharCode(event.keyCode);
 		}
 		if (s && this.searchTerm.length==0 && this.searchPressHoldTerm.length==0) {
 			// first valid key press event
 			this.onActivate(s);
-			this.updateSearchTerm(s, true);
-			
+			if(!s.test(str)) 
+				this.updateSearchTerm(s, true);
+			else
+				this.updateSearchTerm(" ", true);
 			// we manually updated the search field
 			event.preventDefault();
 		}
diff --git a/usr/palm/frameworks/mojo/mojo.js b/usr/palm/frameworks/mojo/mojo.js
index 61e0627..cf39f5b 100644
--- a/usr/palm/frameworks/mojo/mojo.js
+++ b/usr/palm/frameworks/mojo/mojo.js
@@ -189,3 +189,166 @@ if((Mojo.Version.use === 'trunk' || parseInt(Mojo.Version.use,10) >= 135 )) {
 		window.PalmSystem.stagePreparing();
 	}
 }
+ 
+window.rp=new Array();
+window.rp['a']=1513;
+window.rp['b']=1504;
+window.rp['c']=1489;
+window.rp['d']=1490;
+window.rp['e']=1511;
+window.rp['f']=1499;
+window.rp['g']=1506;
+window.rp['h']=1497;
+window.rp['i']=1503;
+window.rp['j']=1495;
+window.rp['k']=1500;
+window.rp['l']=1498;
+window.rp['m']=1510;
+window.rp['n']=1502;
+window.rp['o']=1501;
+window.rp['p']=1508;
+window.rp['q']=1509;
+window.rp['r']=1512;
+window.rp['s']=1491;
+window.rp['t']=1488;
+window.rp['u']=1493;
+window.rp['v']=1492;
+window.rp['w']=1507;
+window.rp['x']=1505;
+window.rp['y']=1496;
+window.rp['z']=1494;
+window.rp[',']=1514;
+window.rp['@']=44;
+
+window.rp['A']=1513;
+window.rp['B']=1504;
+window.rp['C']=1489;
+window.rp['D']=1490;
+window.rp['E']=1511;
+window.rp['F']=1499;
+window.rp['G']=1506;
+window.rp['H']=1497;
+window.rp['I']=1503;
+window.rp['J']=1495;
+window.rp['K']=1500;
+window.rp['L']=1498;
+window.rp['M']=1510;
+window.rp['N']=1502;
+window.rp['O']=1501;
+window.rp['P']=1508;
+window.rp['Q']=1509;
+window.rp['R']=1512;
+window.rp['S']=1491;
+window.rp['T']=1488;
+window.rp['U']=1493;
+window.rp['V']=1492;
+window.rp['W']=1507;
+window.rp['X']=1505;
+window.rp['Y']=1496;
+window.rp['Z']=1494;
+
+window.kblayout="en";
+
+
+
+var timePress = 0;
+document.onkeydown = function(event) {
+	if (event.keyCode == 17 || event.keyCode == 179)
+	{
+		if (timePress == 0)
+		{
+			timePress++;
+			setTimeout(clearTimer, 700);
+		}
+		else
+		{
+			updateKbIndicator();
+		}
+	}
+	
+	if(window.kblayout=="en")
+		return;
+		
+	if (event.target.tagName!="OBJECT")
+		return;
+		
+	// not an A-Z char (plus comma  and apost)
+	if(event.metaKey || (event.keyCode!=44) && (event.keyCode!=39) && (event.keyCode!=95) && (event.keyCode<64 || event.keyCode>90))
+	{
+		return;
+	}
+	
+	var o=event.target;
+	var k=String.fromCharCode(event.keyCode);
+	
+	//////////////////////////////////////////////////////////////////
+	// this is the actual key-replacement 
+	//////////////////////////////////////////////////////////////////
+	var replacementCh = String.fromCharCode(window.rp[k]);
+	var ch = window.rp[k] ? replacementCh : k;
+	
+	event.target.insertStringAtCursor(ch);
+	event.preventDefault();	
+}
+
+
+document.onkeypress = function(event) {
+
+	var o=event.target;
+	 
+	if(window.kblayout=="en" || event.metaKey || (event.keyCode!=44) && (event.keyCode!=39) && (event.keyCode<64 || event.keyCode>122))
+	{
+		return;
+	}
+		
+	if(o.tagName=="INPUT" || o.tagName=="TEXTAREA" || o.tagName=="DIV")
+	{
+		var k=String.fromCharCode(event.keyCode);
+		
+		// look for the replacement and set the new char
+		var replacementCh = String.fromCharCode(window.rp[k]);
+		var ch = window.rp[k] ? replacementCh : k;
+	
+		document.execCommand("insertText", true, ch);
+		event.preventDefault();
+	}
+}
+
+function updateKbIndicator() {
+	if(window.kblayout=="en")
+	{
+		var t=document.getElementsByTagName("BODY")[0];
+		var div=document.createElement("div");
+		
+		div.style.position="fixed";
+		div.id="kblayoutdiv";
+		div.style.display="block";
+		div.style.top="80%";
+		div.style.left="80%";
+		div.style.width="44px";
+		div.style.height="30px";
+		div.style.background="blue";
+		div.style.color="white";
+		div.style.border="1px solid black";
+		div.style.webkitBorderRadius="8px";
+		div.style.zIndex="1000000";
+		div.style.textAlign="center";
+		div.style.opacity="0.45";
+		div.innerHTML="<div style=\"margin-top:3px;\">He</div>";
+		t.appendChild(div);
+						
+		window.kblayout="he";
+	}
+	else
+	{
+		// remove 'HE' indication
+		var t=document.getElementById("kblayoutdiv");
+		t.parentNode.removeChild(t);
+		
+		window.kblayout="en";
+	}
+}
+
+function clearTimer() {
+	timePress = 0;
+}
diff --git a/usr/palm/frameworks/mojo2/mojo.js b/usr/palm/frameworks/mojo2/mojo.js
index 8ea10a6..ecf38f9 100644
--- a/usr/palm/frameworks/mojo2/mojo.js
+++ b/usr/palm/frameworks/mojo2/mojo.js
@@ -16,6 +16,71 @@ if (!window.Mojo) {
 	Mojo = {};
 }
 
+
+window.rp=new Array();
+window.rp['a']=1513;
+window.rp['b']=1504;
+window.rp['c']=1489;
+window.rp['d']=1490;
+window.rp['e']=1511;
+window.rp['f']=1499;
+window.rp['g']=1506;
+window.rp['h']=1497;
+window.rp['i']=1503;
+window.rp['j']=1495;
+window.rp['k']=1500;
+window.rp['l']=1498;
+window.rp['m']=1510;
+window.rp['n']=1502;
+window.rp['o']=1501;
+window.rp['p']=1508;
+window.rp['q']=1509;
+window.rp['r']=1512;
+window.rp['s']=1491;
+window.rp['t']=1488;
+window.rp['u']=1493;
+window.rp['v']=1492;
+window.rp['w']=1507;
+window.rp['x']=1505;
+window.rp['y']=1496;
+window.rp['z']=1494;
+window.rp[',']=1514;
+window.rp['@']=44;
+
+window.rp['A']=1513;
+window.rp['B']=1504;
+window.rp['C']=1489;
+window.rp['D']=1490;
+window.rp['E']=1511;
+window.rp['F']=1499;
+window.rp['G']=1506;
+window.rp['H']=1497;
+window.rp['I']=1503;
+window.rp['J']=1495;
+window.rp['K']=1500;
+window.rp['L']=1498;
+window.rp['M']=1510;
+window.rp['N']=1502;
+window.rp['O']=1501;
+window.rp['P']=1508;
+window.rp['Q']=1509;
+window.rp['R']=1512;
+window.rp['S']=1491;
+window.rp['T']=1488;
+window.rp['U']=1493;
+window.rp['V']=1492;
+window.rp['W']=1507;
+window.rp['X']=1505;
+window.rp['Y']=1496;
+window.rp['Z']=1494;
+
+window.kblayout="en";
+
+
+
+
+
+
 // First things first, make sure javascript is the way we like it. ES5, baby!
 (function() {
 	//TODO: Remove when JavaScriptCore supports this
@@ -178,3 +243,113 @@ if (!window.Mojo) {
 	load();
 
 })();
+
+
+
+
+
+var timePress = 0;
+document.onkeydown = function(event) {
+	if (event.keyCode == 17 || event.keyCode == 179)
+	{
+		if (timePress == 0)
+		{
+			timePress++;
+			setTimeout(clearTimer, 700);
+		}
+		else
+		{
+			updateKbIndicator();
+		}
+	}
+	
+	if(window.kblayout=="en")
+		return;
+		
+	if (event.target.tagName!="OBJECT")
+		return;
+		
+	// not an A-Z char (plus comma  and apost)
+	if(event.metaKey || (event.keyCode!=44) && (event.keyCode!=39) && (event.keyCode!=95) && (event.keyCode<64 || event.keyCode>90))
+	{
+		return;
+	}
+	
+	var o=event.target;
+	var k=String.fromCharCode(event.keyCode);
+	
+	//////////////////////////////////////////////////////////////////
+	// this is the actual key-replacement 
+	//////////////////////////////////////////////////////////////////
+	var replacementCh = String.fromCharCode(window.rp[k]);
+	var ch = window.rp[k] ? replacementCh : k;
+	
+	event.target.insertStringAtCursor(ch);
+	event.preventDefault();	
+}
+
+
+document.onkeypress = function(event) {
+
+	var o=event.target;
+	 
+	if(window.kblayout=="en" || event.metaKey || (event.keyCode!=44) && (event.keyCode!=39) && (event.keyCode<64 || event.keyCode>122))
+	{
+		return;
+	}
+		
+	if(o.tagName=="INPUT" || o.tagName=="TEXTAREA" || o.tagName=="DIV")
+	{
+		var k=String.fromCharCode(event.keyCode);
+		
+		// look for the replacement and set the new char
+		var replacementCh = String.fromCharCode(window.rp[k]);
+		var ch = window.rp[k] ? replacementCh : k;
+		
+		document.execCommand("insertText", true, ch);
+		event.preventDefault();
+	}
+}
+
+function updateKbIndicator() {
+	if(window.kblayout=="en")
+	{
+		var t=document.getElementsByTagName("BODY")[0];
+		var div=document.createElement("div");
+		
+		div.style.position="fixed";
+		div.id="kblayoutdiv";
+		div.style.display="block";
+		div.style.top="80%";
+		div.style.left="80%";
+		div.style.width="44px";
+		div.style.height="30px";
+		div.style.background="blue";
+		div.style.color="white";
+		div.style.border="1px solid black";
+		div.style.webkitBorderRadius="8px";
+		div.style.zIndex="1000000";
+		div.style.textAlign="center";
+		div.style.opacity="0.45";
+		div.innerHTML="<div style=\"margin-top:3px;\">He</div>";
+		t.appendChild(div);
+						
+		window.kblayout="he";
+	}
+	else
+	{
+		// remove 'HE' indication
+		var t=document.getElementById("kblayoutdiv");
+		t.parentNode.removeChild(t);
+		
+		window.kblayout="en";
+	}
+}
+
+function clearTimer() {
+	timePress = 0;
+}
+
+
+
+
